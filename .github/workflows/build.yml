---
name: build
'on': [push, pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  linux-gcc:
    name: linux-gcc
    runs-on: ubuntu-latest
    steps:
      - name: Update
        run: sudo apt-get --yes update
      - name: Install dependencies
        run: sudo apt-get --yes install fluidsynth libfluidsynth-dev sordi gtk+2.0 libgtk2.0-dev libcairo2 lv2-dev
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=../install
      - name: Build
        run: cmake --build build
  linux-clang-with-lld:
    name: linux-clang-with-lld  # clang with LLVM's linker LLD
    runs-on: ubuntu-latest
    steps:
      - name: Update
        run: sudo apt-get --yes update
      - name: Install dependencies
        run: sudo apt-get --yes install fluidsynth libfluidsynth-dev sordi gtk+2.0 libgtk2.0-dev libcairo2 lv2-dev
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure
        run: >
          mkdir build && cd build &&
          cmake ..
          -DCMAKE_INSTALL_PREFIX=../install
          -DCMAKE_C_COMPILER=clang
          -DCMAKE_CXX_COMPILER=clang++
          -DCMAKE_C_FLAGS="-fuse-ld=lld"
          -DCMAKE_CXX_FLAGS="-fuse-ld=lld"
      - name: Build
        run: cmake --build build
  macos:
    name: macos
    runs-on: macos-13
    steps:
      - name: Install dependencies
        run: brew install automake fluid-synth gtk+ cairo lv2 gtk-mac-integration expat
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure
        run: |
          export LDFLAGS="-L$(brew --prefix)/lib"
          export CPPFLAGS="-I$(brew --prefix expat)/include"
          mkdir build && cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_SHARED_LINKER_FLAGS="-L$(brew --prefix)/lib -Wl,-rpath,$(brew --prefix)/lib" -DCMAKE_CXX_FLAGS="-I$(brew --prefix)/include"
      - name: Build
        run: cmake --build build
        # install does not work yet, but seems less critical for now
  msvc:
    name: msvc
    runs-on: windows-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache vcpkg dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          key: vcpkg-x64-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-x64-
          path: build\vcpkg_installed
      - name: Configure
        run: >
          cmake
          -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake .
      - name: Build
        run: cmake --build .
        # install does not work yet, but seems less critical for now
